name: Build Ferrix (Linux & Windows)

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            platform: linux
            tauri_args: ""
          - os: windows-latest
            platform: windows
            tauri_args: ""

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: pnpm

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Linux dependencies
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install NSIS
        if: matrix.platform == 'windows'
        uses: vimtor/action-install-nsis@v1

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Tauri
        uses: tauri-apps/tauri-action@v0
        with:
          args: ${{ matrix.tauri_args }}

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ferrix-${{ matrix.platform }}
          path: |
            **/target/release/bundle/**

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]
    runs-on: ubuntu-22.04
    steps:
      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: ferrix-linux
          path: artifacts/linux

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: ferrix-windows
          path: artifacts/windows

      - name: Create GitHub Release (draft)
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          name: Ferrix ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: |
            artifacts/linux/**/*
            artifacts/windows/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
